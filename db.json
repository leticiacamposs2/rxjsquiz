{
    "bg": "https://www.educative.io/api/page/6083106485305344/image/download/5142091498782720",
    "title": "Quiz sobre RxJS",
    "description": "Teste os seus conhecimentos sobre RxJS e veja o quanto você aprendeu",
    "questions": [
      {
        "image": "https://miro.medium.com/max/1004/1*7_RZMTjJyiw3J9-svhLpZw.gif",
        "title": "O que é RxJS?",
        "description": "Essa é pra aquecer",
        "answer": 0,
        "alternatives": [
          "RxJS é uma biblioteca JavaScript para compor programas assíncronos e baseados em eventos usando sequências observáveis, trazendo conceito de programação reativa para a Web.",
          "RxJS é uma biblioteca que possibilita o uso da programação reativa para a linguagem de programação Java. O Rx significa Reactive Extensions (Reactivex), que é um projecto que fornece a implementação da programação reativa para diferentes linguagens de programação (ex: RxJava, RxSwift, Rx.Net e etc..)",
          "RxJS é uma implementação, em Swift, da lib ReactiveX. Esta lib é uma composição de programas assíncronos e de programas baseados em eventos utilizando sequências observáveis.",
          "RxJS é uma biblioteca que possibilita o uso da programação reativa para a linguagem de programação Scala, baseados em eventos usando sequências observáveis."
        ]
      },
      {
        "image": "https://miro.medium.com/max/500/1*gTgRYkLc0VijjABXCMCurQ.jpeg",
        "title": "O RxJS e o Padrão Observer",
        "description": "É correto afirmar:",
        "answer": 3,
        "alternatives": [
          "Trata-se um de padrão simples, onde Observers são classes com um método de notificação e Subject é uma classe responsável por adicionar ou remover um Observer em sua coleção interna de Observers e notificá-los sobre uma alteração de estado.",
          "No RxJS, subjects e observables são objetos semelhantes, os subjects herdam dos observables (e também de observer), possuindo assim todos os métodos disponíveis nos observables (em ambos objetos podemos chamar o método subscribe para “escutar” atualizações), mas em subject, por herdar de observer, temos também os métodos next , error e complete.",
          "A principal diferença é que os subjects possuem estados e mantém uma lista de observers registrados para receberem atualizações desse estado e são a única forma de publicar (através do next herdado de observer) a mesma informação para vários observadores diferentes simultâneamente.",
          "Todas alternativas estão corretas."
        ]
      }
    ],
    "external": [
      "https://rxjsquiz.vercel.app/"
    ],
    "theme": {
      "colors": {
        "primary": "#9c27b0",
        "secondary": "#d500f9",
        "mainBg": "#171B35",
        "contrastText": "#FFFFFF",
        "wrong": "#FF5722",
        "success": "#4CAF50"
      },
      "borderRadius": "4px"
  }
}